<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="imgFirst.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowLL.png</value>
  </data>
  <data name="imgFirst.ImageUrlOff" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowLLOff.png</value>
  </data>
  <data name="imgFirst.Text" xml:space="preserve">
    <value>first page</value>
  </data>
  <data name="imgPrevious.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowL.png</value>
  </data>
  <data name="imgPrevious.ImageUrlOff" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowLOff.png</value>
  </data>
  <data name="imgPrevious.Text" xml:space="preserve">
    <value>previous page</value>
  </data>
  <data name="imgNext.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowR.png</value>
  </data>
  <data name="imgNext.ImageUrlOff" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowROff.png</value>
  </data>
  <data name="imgNext.Text" xml:space="preserve">
    <value>next page</value>
  </data>
  <data name="imgLast.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowRR.png</value>
  </data>
  <data name="imgLast.ImageUrlOff" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/dgArrowRROff.png</value>
  </data>
  <data name="imgLast.Text" xml:space="preserve">
    <value>last page</value>
  </data>
  <data name="lblPageCount.Text" xml:space="preserve">
    <value>page {0} of {1}</value>
  </data>
  <data name="lblTotalRecords.Text" xml:space="preserve">
    <value>total recs. </value>
  </data>
  <data name="lblPageSize.Text" xml:space="preserve">
    <value>recs. x page </value>
  </data>
  <data name="FolderHierarchy.Header" xml:space="preserve">
    <value>Document Path</value>
  </data>
  <data name="DocumentName.Header" xml:space="preserve">
    <value>Document Name</value>
  </data>
  <data name="TabName.Header" xml:space="preserve">
    <value>Module Page</value>
  </data>
  <data name="DocumentDownloadCount.Header" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="actionStats.Text" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="actionStatsDoc.Text" xml:space="preserve">
    <value>by Document</value>
  </data>
  <data name="actionStatsFol.Text" xml:space="preserve">
    <value>by Folder</value>
  </data>
  <data name="actionStatsCat.Text" xml:space="preserve">
    <value>by Category</value>
  </data>
  <data name="actionBack.Text" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="cmdBack.Text" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="lblFilterOptions.Text" xml:space="preserve">
    <value>Filter Options</value>
  </data>
  <data name="cboStatus.Text" xml:space="preserve">
    <value>- status - </value>
  </data>
  <data name="cboStatusSubmitted.Text" xml:space="preserve">
    <value>submitted</value>
  </data>
  <data name="cboStatusRevise.Text" xml:space="preserve">
    <value>revise</value>
  </data>
  <data name="cboStatusRejected.Text" xml:space="preserve">
    <value>rejected</value>
  </data>
  <data name="lblStatusLegend.Text" xml:space="preserve">
    <value>Status Legend</value>
  </data>
  <data name="lblUser.Text" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="imgUser.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/User.png</value>
  </data>
  <data name="imgUser.AlternateText" xml:space="preserve">
    <value>select a user</value>
  </data>
  <data name="valUser.ErrorMessage" xml:space="preserve">
    <value>user not found</value>
  </data>
  <data name="lblDateStart.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="imgDateStart.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/Calendar.png</value>
  </data>
  <data name="imgDateStart.AlternateText" xml:space="preserve">
    <value>select a start date</value>
  </data>
  <data name="valDateStartCompare.ErrorMessage" xml:space="preserve">
    <value>start date must be less or equal to end date</value>
  </data>
  <data name="valDateStartDataType.ErrorMessage" xml:space="preserve">
    <value>invalid date</value>
  </data>
  <data name="lblDateEnd.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="imgDateEnd.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/Calendar.png</value>
  </data>
  <data name="imgDateEnd.AlternateText" xml:space="preserve">
    <value>select an end date</value>
  </data>
  <data name="valDateEndCompare.ErrorMessage" xml:space="preserve">
    <value>end date must be greater or equal to start date</value>
  </data>
  <data name="valDateEndDataType.ErrorMessage" xml:space="preserve">
    <value>invalid date</value>
  </data>
  <data name="cmdViewModerate.Text" xml:space="preserve">
    <value>view items</value>
  </data>
  <data name="lblDownloadDetails.Text" xml:space="preserve">
    <value>Download Details</value>
  </data>
  <data name="lblTitleFileEdition.Text" xml:space="preserve">
    <value>Edit Document</value>
  </data>
  <data name="cmdReview.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/Details.png</value>
  </data>
  <data name="cmdReview.AlternateText" xml:space="preserve">
    <value>review</value>
  </data>
  <data name="cmdDestroy.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/Delete2.png</value>
  </data>
  <data name="cmdDestroy.AlternateText" xml:space="preserve">
    <value>delete permanently</value>
  </data>
  <data name="cmdDestroy.Text" xml:space="preserve">
    <value>Are you sure you want to delete this item permanently?</value>
  </data>
  <data name="imgDownloadDocument.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/tDocumentDownload.png</value>
  </data>
  <data name="imgDownloadDocument.Text" xml:space="preserve">
    <value>download</value>
  </data>
  <data name="lblDocumentName.Text" xml:space="preserve">
    <value>Document Name</value>
  </data>
  <data name="hlpDocumentName.Help" xml:space="preserve">
    <value>Enter a name for the document</value>
  </data>
  <data name="lblDocumentDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="hlpDocumentDescription.Help" xml:space="preserve">
    <value>Enter a description for the document</value>
  </data>
  <data name="lblDocumentFolder.Text" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="hlpDocumentFolder.Help" xml:space="preserve">
    <value>Select a folder to store the document</value>
  </data>
  <data name="lblDocumentCategories.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="hlpDocumentCategories.Help" xml:space="preserve">
    <value>Select the categories you want to associate with the document</value>
  </data>
  <data name="hlpDocumentUploaded.Help" xml:space="preserve">
    <value>Upload Information includes: Upload Date, User Login Name, User Full Name</value>
  </data>
  <data name="lblDocumentUploaded.Text" xml:space="preserve">
    <value>Upload Info</value>
  </data>
  <data name="hlpDocumentModified.Help" xml:space="preserve">
    <value>Modified Information includes: Modified Date, User Login Name, User Full Name</value>
  </data>
  <data name="lblDocumentModified.Text" xml:space="preserve">
    <value>Modified Info</value>
  </data>
  <data name="lblDetTabName.Text" xml:space="preserve">
    <value>Module Page</value>
  </data>
  <data name="lblDetDocumentDownloads.Text" xml:space="preserve">
    <value>Download Details</value>
  </data>
  <data name="lblDetDNNUserName.Text" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="lblDocumentStatsTimestamp.Text" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="UserName.Header" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="FirstName.Header" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="LastName.Header" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="cmdSelect.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/Details.png</value>
  </data>
  <data name="cmdSelect.AlternateText" xml:space="preserve">
    <value>select user</value>
  </data>
  <data name="lnkClose.Text" xml:space="preserve">
    <value>close window</value>
  </data>
  <data name="UserLetterFilter.Text" xml:space="preserve">
    <value>A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z</value>
  </data>
  <data name="ControlTitle_statsdoc.Text" xml:space="preserve">
    <value>Document Moderation</value>
  </data>
  <data name="Help.ImageUrl" xml:space="preserve">
    <value>~/DesktopModules/DNNCorp/DocumentLibrary/images/Help.png</value>
  </data>
  <data name="DocumentDescription.Header" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DocumentSize.Header" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Uploaded.Header" xml:space="preserve">
    <value>Uploaded</value>
  </data>
  <data name="Modified.Header" xml:space="preserve">
    <value>Modified</value>
  </data>
  <data name="warningMissignFolder.Text" xml:space="preserve">
    <value>The following folder does not exist: </value>
  </data>
  <data name="warningMissignDocumentModerate.Text" xml:space="preserve">
    <value>The moderated item does not exist in the Database</value>
  </data>
  <data name="cmdUpdate.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="cmdModerateRevise.Text" xml:space="preserve">
    <value>Revise</value>
  </data>
  <data name="cmdModerateSubmit.Text" xml:space="preserve">
    <value>Re-Submit</value>
  </data>
  <data name="cmdModerateReject.Text" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="cmdModerateAccept.Text" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="reviseDocConfirm.Text" xml:space="preserve">
    <value>The status of the item will be changed to: Revise.\nThe owner of the document will be notified and will be asked to revise the document before re-submitting for approval.</value>
  </data>
  <data name="rejectDocConfirm.Text" xml:space="preserve">
    <value>The status of the item will be changed to: Rejected.\nThe owner of the document will be notified but will not be able to re-submit the document for approval.</value>
  </data>
  <data name="acceptDocConfirm.Text" xml:space="preserve">
    <value>The owner of the document will be notified that the document has been published.\nThe document will be removed from the moderation list.</value>
  </data>
  <data name="trackSubject.Text" xml:space="preserve">
    <value>DocumentLibrary: Document(s) Change Alert</value>
  </data>
  <data name="trackBody.Text" xml:space="preserve">
    <value>The following document(s) have changed on site {0}: {1}</value>
  </data>
  <data name="lblDocument.Text" xml:space="preserve">
    <value>no items found</value>
  </data>
  <data name="moderateSubject.Text" xml:space="preserve">
    <value>DocumentLibrary: Document(s) Moderate Alert</value>
  </data>
  <data name="moderateBody.Text" xml:space="preserve">
    <value>The following document(s) need moderation on site {0}: {1}</value>
  </data>
  <data name="moderateReviseBody.Text" xml:space="preserve">
    <value>The following document(s) have been Revised on site {0}: {1}</value>
  </data>
  <data name="moderateSubmitBody.Text" xml:space="preserve">
    <value>The following document(s) have been Re-Submitted on site {0}: {1}</value>
  </data>
  <data name="moderateRejectBody.Text" xml:space="preserve">
    <value>The following document(s) have been Rejected on site {0}: {1}</value>
  </data>
  <data name="moderateAcceptBody.Text" xml:space="preserve">
    <value>The following document(s) ahve been Accepted on site {0}: {1}</value>
  </data>
</root>